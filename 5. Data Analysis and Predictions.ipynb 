{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# *INDIVIDUAL ASSIGNMENT - NICHOLAS DI NICOLA*"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The data in \"Weddings.xlsx\" (see the attachment) show wedding costs and different variables that are likely to affect it (attendance, the couple's income, age of the bride, etc.). Build a regression model to predict wedding costs from all other variables. Note the \"Payor\" column contains a categorical variable, which takes two values - \"Bride's family\" and \"Groom's family\". To use the variable in the regression model, you need to first convert it to a numerical variable, with 0 representing one category and 1 representing the other. Analyze residuals to confirm that the assumptions of linear regression are valid for this model.\n",
    "\n",
    "Interpret and comment on the regression results: (1) What is the quality of the model? (2) Which predictor variables are the most important?\n",
    "If a couple is planning a wedding for 175 guests, the couple's income is $100,000, the bride's age is 33, the payor is the Bride's family, how much should they budget?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [],
   "source": [
    "#import necessary libraries\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt \n",
    "import statsmodels.api as sm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(25, 5)"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Read the file \n",
    "df = pd.read_excel(\"Weddings.xlsx\")\n",
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CoupleIncome</th>\n",
       "      <th>BrideAge</th>\n",
       "      <th>Payor</th>\n",
       "      <th>WeddingCost</th>\n",
       "      <th>Attendance</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>45000</td>\n",
       "      <td>32</td>\n",
       "      <td>Groom's Parents</td>\n",
       "      <td>5000</td>\n",
       "      <td>50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>43000</td>\n",
       "      <td>19</td>\n",
       "      <td>Groom's Parents</td>\n",
       "      <td>30000</td>\n",
       "      <td>250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>62000</td>\n",
       "      <td>24</td>\n",
       "      <td>Bride's Parents</td>\n",
       "      <td>13000</td>\n",
       "      <td>150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>67000</td>\n",
       "      <td>30</td>\n",
       "      <td>Bride's Parents</td>\n",
       "      <td>20000</td>\n",
       "      <td>200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>78000</td>\n",
       "      <td>35</td>\n",
       "      <td>Bride's Parents</td>\n",
       "      <td>26000</td>\n",
       "      <td>200</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    CoupleIncome  BrideAge            Payor  WeddingCost  Attendance\n",
       "24         45000        32  Groom's Parents         5000          50\n",
       "6          43000        19  Groom's Parents        30000         250\n",
       "22         62000        24  Bride's Parents        13000         150\n",
       "15         67000        30  Bride's Parents        20000         200\n",
       "9          78000        35  Bride's Parents        26000         200"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.sample(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CoupleIncome</th>\n",
       "      <th>BrideAge</th>\n",
       "      <th>Payor</th>\n",
       "      <th>WeddingCost</th>\n",
       "      <th>Attendance</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>130000</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "      <td>60700</td>\n",
       "      <td>300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>157000</td>\n",
       "      <td>23</td>\n",
       "      <td>0</td>\n",
       "      <td>52000</td>\n",
       "      <td>350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>98000</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>47000</td>\n",
       "      <td>150</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   CoupleIncome  BrideAge  Payor  WeddingCost  Attendance\n",
       "0        130000        22      0        60700         300\n",
       "1        157000        23      0        52000         350\n",
       "2         98000        27      1        47000         150"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Convert \"Payor\" values to binary (0,1)\n",
    "df[\"Payor\"] = df[\"Payor\"].replace(\"Bride's Parents\", 0).replace(\"Groom's Parents\", 1)\n",
    "df.head(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Explore the dataset with some graphs "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7f99247a25b0>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f99247b2fa0>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f99247dc730>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f9925348eb0>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f992537c670>],\n",
       "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f9923dddd00>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f9923ddd700>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f99253d1ac0>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f9925432970>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f9925468130>],\n",
       "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f99254908b0>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f99254b80d0>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f99254f07f0>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f9925518f70>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f992554d730>],\n",
       "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f9925577eb0>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f99255ac670>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f99255d5df0>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f992560d5b0>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f9925635d30>],\n",
       "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f992566c4f0>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f9925693c70>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f9922ddc280>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f9924752940>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f9924759730>]],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x576 with 25 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Let's build a scatter matrix to better visualise the correlations between each variables and their distributons \n",
    "pd.plotting.scatter_matrix(df, figsize = [20, 8])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f9922098430>"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#A closer look at the \"Wedding Cost\" distribution, the target variable (y)\n",
    "sns.distplot(df[\"WeddingCost\"], color=\"#f56942\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Linear Regression Model "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [],
   "source": [
    "#multiple linear regression \n",
    "model = sm.OLS.from_formula('WeddingCost ~ CoupleIncome + BrideAge + Payor + Attendance', data=df).fit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>       <td>WeddingCost</td>   <th>  R-squared:         </th> <td>   0.754</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.705</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   15.31</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Fri, 06 Nov 2020</td> <th>  Prob (F-statistic):</th> <td>6.97e-06</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>15:37:33</td>     <th>  Log-Likelihood:    </th> <td> -254.71</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>    25</td>      <th>  AIC:               </th> <td>   519.4</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>    20</td>      <th>  BIC:               </th> <td>   525.5</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>     4</td>      <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "        <td></td>          <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>    <td>-3048.3092</td> <td> 1.16e+04</td> <td>   -0.263</td> <td> 0.795</td> <td>-2.72e+04</td> <td> 2.11e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CoupleIncome</th> <td>    0.3238</td> <td>    0.079</td> <td>    4.112</td> <td> 0.001</td> <td>    0.160</td> <td>    0.488</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>BrideAge</th>     <td> -233.3111</td> <td>  380.541</td> <td>   -0.613</td> <td> 0.547</td> <td>-1027.105</td> <td>  560.483</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Payor</th>        <td> 3712.8716</td> <td> 3359.726</td> <td>    1.105</td> <td> 0.282</td> <td>-3295.394</td> <td> 1.07e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Attendance</th>   <td>   54.1315</td> <td>   28.591</td> <td>    1.893</td> <td> 0.073</td> <td>   -5.507</td> <td>  113.770</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td> 6.300</td> <th>  Durbin-Watson:     </th> <td>   1.828</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.043</td> <th>  Jarque-Bera (JB):  </th> <td>   4.383</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td> 0.965</td> <th>  Prob(JB):          </th> <td>   0.112</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 3.697</td> <th>  Cond. No.          </th> <td>6.31e+05</td>\n",
       "</tr>\n",
       "</table><br/><br/>Warnings:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 6.31e+05. This might indicate that there are<br/>strong multicollinearity or other numerical problems."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:            WeddingCost   R-squared:                       0.754\n",
       "Model:                            OLS   Adj. R-squared:                  0.705\n",
       "Method:                 Least Squares   F-statistic:                     15.31\n",
       "Date:                Fri, 06 Nov 2020   Prob (F-statistic):           6.97e-06\n",
       "Time:                        15:37:33   Log-Likelihood:                -254.71\n",
       "No. Observations:                  25   AIC:                             519.4\n",
       "Df Residuals:                      20   BIC:                             525.5\n",
       "Df Model:                           4                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "================================================================================\n",
       "                   coef    std err          t      P>|t|      [0.025      0.975]\n",
       "--------------------------------------------------------------------------------\n",
       "Intercept    -3048.3092   1.16e+04     -0.263      0.795   -2.72e+04    2.11e+04\n",
       "CoupleIncome     0.3238      0.079      4.112      0.001       0.160       0.488\n",
       "BrideAge      -233.3111    380.541     -0.613      0.547   -1027.105     560.483\n",
       "Payor         3712.8716   3359.726      1.105      0.282   -3295.394    1.07e+04\n",
       "Attendance      54.1315     28.591      1.893      0.073      -5.507     113.770\n",
       "==============================================================================\n",
       "Omnibus:                        6.300   Durbin-Watson:                   1.828\n",
       "Prob(Omnibus):                  0.043   Jarque-Bera (JB):                4.383\n",
       "Skew:                           0.965   Prob(JB):                        0.112\n",
       "Kurtosis:                       3.697   Cond. No.                     6.31e+05\n",
       "==============================================================================\n",
       "\n",
       "Warnings:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The condition number is large, 6.31e+05. This might indicate that there are\n",
       "strong multicollinearity or other numerical problems.\n",
       "\"\"\""
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#chech the summary of the model \n",
    "model.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Distribution of Residuals \n",
    "\n",
    "Relationship between standardized residuals and the fitted values for the dependent variables."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Residuals')"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Get the residuals from the model \n",
    "st_resids = model.get_influence().resid_studentized_internal\n",
    "\n",
    "#Create the scatter plot \n",
    "plt.scatter(x = model.fittedvalues, y = st_resids, c=\"#f56942\")\n",
    "plt.title(\"Residuals Vs Fitted Values\")\n",
    "plt.xlabel(\"Fitted Values\")\n",
    "plt.ylabel(\"Residuals\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f991ff3bac0>"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Plot the distribution of residuals \n",
    "sns.distplot(st_resids, bins = 10, color=\"#f56942\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### What is the quality of the model? \n",
    "\n",
    "The scatter plot shows that the values are randomly distributed around zero, which means that the linear regresion is appropriate for this model. The histogram suggests the residuals are distributed around 0 and are normally distributed. Moreover, the results of the Jarque-Bera test on the residuals also indicate that the errors are distributed normally: the p-value equals 0.112, therefore we fail to reject the null hypothesis of normal distribution. Besides, the model has a R-sqaured of 0.754 and a adj.R-squared of 0.705, hence overall we can consider the quality of the model as good."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Which predictor variables are the most important?\n",
    "\n",
    "From the summery's model we can see that the \"CoupleIncome\", \"Payor\" and \"Attendance\" variables prositively affect the \"WeddingCost\" variable, while \"BrideAge\" negatively affects our dependent variable, which means that the higher the bride's age the less the wedding will cost. Furthermore, amogst all we can consider \"CoupleIncome\" as the most important variable because it is the only statistically significant in predicting the target variable with a P-Value of 0.001. Lastly, we can consider the \"Attendance\" variable as a border line case because of its P-value of 0.073, which is slitghly above the threshold of 0.05 but we have to take into account the fact that we are working with a quite small dataset, hence it might probably be statistically significant if we had more observation.  "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Estimating *y* based on multiple independent variables "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "They should budget £31105.436999999994\n"
     ]
    }
   ],
   "source": [
    "#If a couple is planning a wedding for 175 guests, the couple's income is $100,000, the bride's age is 33, \n",
    "#the payor is the Bride's family, how much should they budget?\n",
    "\n",
    "attendance_coeff = 54.1315\n",
    "couple_income_coeff = 0.3238\n",
    "bride_age_coeff = -233.3111\n",
    "payor_coeff = 3712.8716\n",
    "\n",
    "y = -3048.3092 + (couple_income_coeff*100000) + (attendance_coeff*175) + (bride_age_coeff*33) + (payor_coeff*0)\n",
    "\n",
    "print(f\"They should budget £{y}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
